<?php
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 *  Implement hook_node_postsave() provided by the hook post action module
 *  
 *  @param EntityInterface $entity La entidad guardada
 *  @param String $op la operacion realizada
 *  @return void
 */
function simple_twitter_tweet_node_postsave(EntityInterface $entity, $operation){
  /**
   *  Internal variables
   *  @var Drupal\node\NodeInterface $entity
   *  @var Drupal\simple_twitter_tweet\Utils\TwitterWrapper $twitter 
   *  @var Drupal\simple_twitter_tweet\Utils\TwitterTextFromEntity $textGetter (utils) 
   *  @var Drupal\simple_twitter_tweet\Services\TweetedContent $twContent
   */
  $config         = \Drupal::config('simple_twitter_tweet.settings');
  $cunfig_bundle  = $config->get('content');
  $up_timestamp   = $config->get('up_timestamp');
  $config_pubid   = $config->get('pub_option_id');
  $id             = $entity->id();
  $bundle         = $entity->bundle();

  if ($entity->status->getString() == 0) {
    // If node is not published, return
    return;
  }

  if($bundle == $cunfig_bundle){ 

    if(\Drupal::moduleHandler()->moduleExists('publishing_options')){

      $publishing_options = \Drupal::service('publishing_options.content'); // servi prov  por pub_options
      $op = $publishing_options->getNode($id, $config_pubid);
      if( !empty($op) && $op->selected == 1){

        $twitter    = \Drupal::service('simple_twitter_tweet.twitter_wrapper');
        $textGetter = \Drupal::service('simple_twitter_tweet.get_text_entity');
        $twContent  = \Drupal::service('simple_twitter_tweet.tw_content');

        if($operation == 'insert'){
          $status_message = $textGetter::getMessage($entity);
          $tweeted = $twitter::tweet($status_message);
          if($tweeted !== false){
            \Drupal::messenger()->addStatus(t('Se creó un nuevo tweet'));
            $twContent->set($id, $status_message, $tweeted);
          }
        }
        else if($operation == 'update' && !$twContent->isTweeted($id)){
          $created = $entity->getCreatedTime();

          if($up_timestamp != 0 && $created > $up_timestamp){
            $status_message = $textGetter::getMessage($entity);
            $tweeted = $twitter::tweet($status_message);
            if($tweeted !== false){
              \Drupal::messenger()->addStatus(t('Se creó un nuevo tweet'));
              $twContent->set($id, $status_message, $tweeted);
            }
          }
        }
      }
    }
  } 
  return;
}

/**
 * Implements hook_help().
 */
function simple_twitter_tweet_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the conditional_fields module.
    case 'help.page.simple_twitter_tweet':
      $readme = '<a target="_blank" href="https://github.com/abelperezlindo/simple_twitter_tweet/blob/main/README.md">readme</a>';
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('It allows to automatically create tweets in a user\'s twitter account when new content is created on the website.') . '</p>';
      $output .= '<p>' . t('Then configure the content you want to use, and access to the twitter api') . '</p>';
      $output .= '<p>' . t('More information can be found at @link', ['@link' => $readme] ) . '</p>';
      return $output;

    default:
  }
}